*********2020.07.05*********
***7.1.1函数的定义和使用：初见函数
“代码复制”是程序不良的表现；
函数=函数头+函数体，函数头=返回类型+函数名+参数表；
return停止函数运行；
C语言函数可以用多个return，但是提倡函数单一出口的原则，即只用一个return，这有助于后期对于函数出口的改造工作；
函数声明=函数头+分号：void sum(int begin, int end); 

***7.2.2函数的参数和变量：参数传递（传值）
每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系；
来自Fortran的概念：形参，实参；不建议使用这种古老的称呼，而采用“参数”和“值”的关系；
交换变量赋值的实例；

***7.2.3函数的参数和变量：本地变量
函数每次运行产生了一个独立的变量空间；
变量的生存期和作用域；
块，一对大括号；块内部的变量，只能在其内部生效；而块外部声明的变量，在块内部可以调用；
块里面定义了和外面同名的变量则掩盖了外面的；
不能在同一个块里面定义同名的变量；
本地变量不会被默认初始化；参数在进入函数的时候被初始化；

***7.2.4函数庶事
函数声明和函数头一致；变量类型不一致，传值时可能出错；
int main()也是一个函数，int main

*********2020.07.06*********
***10.1.2字符串：字符串变量
指针还是数组？数组:这个字符串在这里，作为本地变量空间自动被回收；指针：这个字符串不知道在哪，处理参数，动态分配空间。
如果要构造一个字符串，用数组；如果要处理一个字符串，用指针。
常见错误：char *string；scanf("%s\n", string); //string没有初始化为0；
  
*********2020.07.08*********
***10.2.2字符串函数：strlen
size_t的全称应该是size type，就是说“一种用来记录大小的数据类型”;size_t是标准C库中定义的，在64位系统中为long long unsigned int，非64位系统中为long unsigned int。
size_t类型通常用于循环、数组索引、大小的存储和地址运算。

***10.2.3字符串函数：strcmp

***10.2.4字符串函数：strcpy
char *dst=(char*)malloc(strlen(src)+1)

***10.2.4字符串函数：strcat
char *strcat(char *restrict s1, const char *restrict s2); //把s2拷贝到s1的后面，接成一个长的字符串；返回是s1；s1必须具有足够的空间。
防止操作时，字符串数组越界，有如下安全版本：char* strncpy(char *restrict dst, const char *restrict src, size_t n); char* strncat(char *restrict s1, const char *restrict s2, size_t n);

***10.2.6字符串函数：搜索字符
strchr：在字符串中寻找单个字符；strstr

*********2020.07.09*********
***11.1.1枚举
常量符号化：用符号而不是具体的数字来表示程序中的数字；
用枚举而不是定义独立的const int变量；枚举用enum（enumeration）；声明枚举量的时候可以指定值；

***11.2.1结构：结构类型




