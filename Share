格式化输入和输出：
转换说明符(放在%后面)：c, d, u, f, e,E, o, x,X, s

scanf函数
格式：scanf()
scanf()函数的参数输入类型不匹配问题
对于scanf("%d%c",&a,&c)，scanf语句执行时，首先试图从缓冲区中读入一个%d类型的数据，如果和第一个参数匹 配，则继续从缓冲区中读取数据和第二个参数进行匹配，依次进行下去，直到匹配完所有的参数；
如果其中有一个参数不匹配，那就从这个地方跳出，忽略这个 scanf后面所有的参数，而去执行下一条语句。

printf函数
格式：printf(格式字符串，待打印项1，待打印项2，...)；
例：printf("%d,d%",i++,i++)，从右往左执行；


数组、函数和指针：
char * getmemory1()
{
    char * p = NULL;
    p = "hello world";
    return p;
 }
char * getmemory2()
{
    char  *p =  "hello world";
    return p;
}//字符串存放在常量区，并不会因为函数调用的结束而消失，返回指向常量区的地址
char * getmemory3()
{
   char  p[] =  "hello world";
   return p;
}//在函数内部定义的str数组是一个局部变量，将“hello world”字符串存放在里面，当函数调用结束时，局部变量的内容将被操作系统自动收回


排序算法：
1、冒泡排序
2、插入排序
3、选择排序
4、快速排序：
若一组记录的排序码为（46, 79, 56, 38, 40, 84），按照升序冒泡排序一趟扫描的结果是：________________；快速排序，以第一个记录为基准得到的一次划分结果是：________________。

